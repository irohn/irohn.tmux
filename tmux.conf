#GENERAL
  set -g default-terminal "xterm-256color"
  set -ga terminal-overrides ",*:Tc"
  set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
  set -g escape-time 0
  set -g focus-events on

  set -g history-limit 100000
  set -g history-file ~/.tmux/log/tmuxhistory

  set -g monitor-activity off
  set -g visual-activity off
  setw -g monitor-bell off
  set -g bell-action none

  set -g set-clipboard on
  setw -g wrap-search off

# STATUS
  set -g status-position top
  set -g status on
  set -g status-interval 5
  set -g status-style "fg=brightwhite, bg=default"
## Left
  set -g status-left-length 40
  set -g status-left "#[fg=blue,bg=default] ïŠ½  #(whoami) #[fg=brightwhite, bg=default] "
## Center
  set -g window-status-format "#[fg=white,bg=default] #I #W "
  set -g window-status-current-format "#[fg=orange,bg=default, bold] #I #W "
  set -g window-status-separator "#[fg=brightblack,bg=default]|"
  set -g status-justify centre
## Right
  set -g status-right-length 40
  set -g status-right "#[fg=blue,bg=default] #{session_name} "

  set -g status-bg default

# WINDOW
  set -g base-index 1
  set -g renumber-windows on
  setw -g automatic-rename on

# switch windows alt+number
  bind-key -n M-1 select-window -t 1
  bind-key -n M-2 select-window -t 2
  bind-key -n M-3 select-window -t 3
  bind-key -n M-4 select-window -t 4
  bind-key -n M-5 select-window -t 5
  bind-key -n M-6 select-window -t 6
  bind-key -n M-7 select-window -t 7
  bind-key -n M-8 select-window -t 8
  bind-key -n M-9 select-window -t 9

# OTHER'Slt
  set -g set-titles on
  set -g set-titles-string "#{pane_current_command}"
  setw -g allow-rename on
  setw -g mode-style "fg=black, bg=brightblack"

## Clock mode
  set -g clock-mode-colour white
  set -g clock-mode-style 12

## Message
  set -g message-style "fg=blue, bg=default"

# KEY BINDING
###############################################################
## Add prefix key
set -g prefix2 C-Space
bind C-Space send-prefix

## Reload configuration
  bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "tmux conf reloaded"

## Split panel with same directory
  unbind-key '"'
  unbind-key %
  bind-key '%' split-window -h -c "#{pane_current_path}"
  bind-key '"' split-window -v -c "#{pane_current_path}"

## Switch panel
  bind-key h select-pane -L
  bind-key l select-pane -R
  bind-key k select-pane -U
  bind-key j select-pane -D

## Resize panel
bind-key -r -T prefix       M-Up              resize-pane -U 2
bind-key -r -T prefix       M-Down            resize-pane -D 2
bind-key -r -T prefix       M-Left            resize-pane -L 2
bind-key -r -T prefix       M-Right           resize-pane -R 2


# MOUSE
  set -g mouse on
  bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -selection clipboard"
  bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
